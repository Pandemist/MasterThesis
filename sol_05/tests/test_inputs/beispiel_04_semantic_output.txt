SyntaxTreeRefactored { main_func_ref: FunctionBodyRefactored { body: StatementListRefactored { stmt_list: [Statement(DeclassAssignment(Local(Some(Expr(Factor(ConstInt(1))))))), Statement(DeclassAssignment(Local(Some(Expr(Factor(ConstInt(2))))))), Statement(Printf(PrintAssign(Expr(Factor(FunctionCall(FunctionCallRefactored { func_assigns: [Expr(Factor(IdLocalVar(0))), Expr(Factor(IdLocalVar(1)))], func_ref: FunctionBodyRefactored { body: StatementListRefactored { stmt_list: [Statement(DeclassAssignment(Local(Some(Expr(Factor(ConstInt(1))))))), Statement(DeclassAssignment(Local(Some(Expr(Factor(ConstInt(2))))))), Statement(DeclassAssignment(Local(Some(Expr(Factor(ConstFloat(3.5))))))), Statement(DeclassAssignment(Local(Some(Expr(Factor(ConstFloat(4.5))))))), Statement(DeclassAssignment(Local(Some(Expr(Factor(ConstBool(true))))))), Statement(DeclassAssignment(Local(Some(Expr(Factor(ConstBool(false))))))), Statement(StatAssignment(Local { stack_pos: 4, assign: Expr(Sub { lhs: Add { lhs: IntToFloat(Factor(IdLocalVar(2))), rhs: Div { lhs: Mul { lhs: IntToFloat(Factor(IdLocalVar(3))), rhs: IdLocalVar(4) }, rhs: Assignment(Expr(Mul { lhs: Factor(IdLocalVar(5)), rhs: IntToFloat(IdLocalVar(2)) })) } }, rhs: Factor(Assignment(Expr(Div { lhs: IntToFloat(Factor(IdLocalVar(2))), rhs: IdLocalVar(5) }))) }) })), Statement(StatAssignment(Local { stack_pos: 4, assign: IntToFloat(Assign(Local { stack_pos: 2, assign: Expr(Factor(IdLocalVar(3))) })) })), Statement(StatAssignment(Local { stack_pos: 4, assign: Assign(Local { stack_pos: 5, assign: IntToFloat(Expr(Factor(IdLocalVar(2)))) }) })), Statement(ReturnStatement(Some(IntToFloat(Expr(Add { lhs: Factor(IdLocalVar(2)), rhs: Factor(IdLocalVar(3)) })))))] } } }))))))] } }, global_var_list: [] }
