Ok(SyntaxTree { program: [FunctionDefinition(FunctionDefinition { func_type: Float, func_name: "test", func_param: [Parameter { typ: Integer, name: "x" }, Parameter { typ: Integer, name: "y" }], func_body: FunctionBody { body: StatementList { stmt_list: [Statement(DeclassAssignment(DeclassAssignment { typ: Integer, name: "a", assign: Some(Expr(Factor(ConstInt(1)))) })), Statement(DeclassAssignment(DeclassAssignment { typ: Integer, name: "b", assign: Some(Expr(Factor(ConstInt(2)))) })), Statement(DeclassAssignment(DeclassAssignment { typ: Float, name: "c", assign: Some(Expr(Factor(ConstFloat(3.5)))) })), Statement(DeclassAssignment(DeclassAssignment { typ: Float, name: "d", assign: Some(Expr(Factor(ConstFloat(4.5)))) })), Statement(DeclassAssignment(DeclassAssignment { typ: Boolean, name: "e", assign: Some(Expr(Factor(ConstBool(true)))) })), Statement(DeclassAssignment(DeclassAssignment { typ: Boolean, name: "f", assign: Some(Expr(Factor(ConstBool(false)))) })), Statement(StatAssignment(StatAssignment { name: "c", assign: Expr(Sub { lhs: Add { lhs: Factor(Id("a")), rhs: Div { lhs: Mul { lhs: Factor(Id("b")), rhs: Id("c") }, rhs: Assignment(Expr(Mul { lhs: Factor(Id("d")), rhs: Id("a") })) } }, rhs: Factor(Assignment(Expr(Div { lhs: Factor(Id("a")), rhs: Id("d") }))) }) })), Statement(ReturnStatement(Some(Expr(Add { lhs: Factor(Id("a")), rhs: Factor(Id("b")) }))))] } } }), FunctionDefinition(FunctionDefinition { func_type: Void, func_name: "main", func_param: [], func_body: FunctionBody { body: StatementList { stmt_list: [Statement(DeclassAssignment(DeclassAssignment { typ: Integer, name: "a", assign: Some(Expr(Factor(ConstInt(1)))) })), Statement(DeclassAssignment(DeclassAssignment { typ: Integer, name: "b", assign: Some(Expr(Factor(ConstInt(2)))) })), Statement(Printf(PrintAssign(Expr(Factor(FunctionCall(FunctionCall { func_name: "test", func_assigns: [Expr(Factor(Id("a"))), Expr(Factor(Id("b")))] }))))))] } } })] })
